import t,{createContext as e,useReducer as n,useEffect as a}from"react";const o={},c=(t,e,n,a)=>{const{debug:c}=o[t];c&&((t,e,n)=>{console[t]("::SMART-CONTEXT::DEBUG:: ".concat(e),n)})(e,n,a)},i=(t,e)=>n=>"object"!=typeof n&&"RESET"!==t?(c(e,"error","Invalid action call. Payload must be an object",{contextName:e,type:t,payload:n}),null):o[e].dispatch({type:t,payload:n,contextName:e}),r=(t,e)=>{const n={},a={},r={};return Object.keys(t).forEach((o=>{const c=o.replace(/([a-z0-9])([A-Z])/g,"$1_$2").toUpperCase();const s=t[o];var l;"function"==typeof s?(n[c]={handler:s},a[o]=i(c,e)):(l=s,Array.isArray(l)&&l.every((t=>"string"==typeof t))?(n[c]={keys:s},a[o]=i(c,e)):r[o]=s)})),n.RESET={keys:[]},a.reset=i("RESET",e),Object.keys(r).length&&c(e,"error","Invalid actions found in config. They are ignored.",{contextName:e,inValidActions:r}),o[e].actionTypes=n,{actions:a}},s=(t,e)=>{const{type:n,payload:a,contextName:i}=e,{actionTypes:r,getInitialState:s}=o[i];if("RESET"===n)return s();const l={},d={};return r[n].keys.forEach((e=>{e in a?l[e]=a[e]:(l[e]=t[e],d[n]={payload:a,contextName:i}),Object.keys(d).length&&c(i,"warn","Unknown keys in action payload are ignored",{contextName:i,ignoredKeys:d})})),{...t,...l}},l=({actionsConfig:t={},initialState:e={},debug:n=!1,displayName:a})=>{o[a]={getInitialState:()=>JSON.parse(JSON.stringify(e)),debug:n};const{actions:i}=r(t,a),{reducer:l,initialState:d}=(t=>({reducer:(e,n)=>{try{const{type:a}=n,{actionTypes:i}=o[t],r=(i[a].handler||s)(e,n);return c(t,"log","Action Dispatch Success",{contextName:t,action:n,newState:r}),r}catch(a){return c(t,"error","Action Dispatch Failed",{contextName:t,action:n,error:{message:"Error in reducer. Check action config and dispatch call."}}),e}},initialState:o[t].getInitialState()}))(a);return{contextName:a,actions:i,reducer:l,initialState:d}},d=t=>o[t]?o[t].context:{error:"Context ".concat(t," not found")},y=(c={})=>{const{displayName:i}=c,r=(t=>"string"!=typeof t||""===t?"Context name not valid: ".concat(t):!!o[t]&&"Context already initialized: ".concat(t))(i);if(r)return r;const{contextName:s,actions:d,reducer:y,initialState:p}=l(c),u=e({});u.displayName=s,(t=>{const{displayName:e}=t;o[e].context=t})(u);return({children:e})=>{const[c,i]=n(y,p);a((()=>{((t,e)=>{o[t].dispatch=e})(s,i)}),[]);const r={state:c,actions:d};return t.createElement(u.Provider,{value:r},e)}};export{d as getContext,y as initContext};
